-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.doctor
(
    doctor_id integer NOT NULL,
    "S.F.P" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Specialization" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT doctor_pkey PRIMARY KEY (doctor_id)
);

CREATE TABLE IF NOT EXISTS public.medical_history
(
    medical_history_id integer NOT NULL,
    diagnos_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    description character varying(1000) COLLATE pg_catalog."default" NOT NULL,
    doctor_id integer NOT NULL,
    patient_id integer NOT NULL,
    CONSTRAINT medical_history_pkey PRIMARY KEY (medical_history_id)
);

CREATE TABLE IF NOT EXISTS public.patient
(
    patient_id integer NOT NULL,
    "S.F.P" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    gender "char" NOT NULL,
    "DOB" date NOT NULL,
    CONSTRAINT patient_pkey PRIMARY KEY (patient_id)
);

CREATE TABLE IF NOT EXISTS public.recept
(
    recept_id integer NOT NULL,
    drug_name character varying COLLATE pg_catalog."default" NOT NULL,
    medical_history_id integer NOT NULL,
    CONSTRAINT recept_pkey PRIMARY KEY (recept_id)
);

ALTER TABLE IF EXISTS public.medical_history
    ADD CONSTRAINT dtomh FOREIGN KEY (doctor_id)
    REFERENCES public.doctor (doctor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_dtomh
    ON public.medical_history(doctor_id);


ALTER TABLE IF EXISTS public.medical_history
    ADD CONSTRAINT ptomh FOREIGN KEY (patient_id)
    REFERENCES public.patient (patient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_ptomh
    ON public.medical_history(patient_id);


ALTER TABLE IF EXISTS public.recept
    ADD CONSTRAINT rtomh FOREIGN KEY (recept_id)
    REFERENCES public.medical_history (medical_history_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS recept_pkey
    ON public.recept(recept_id);

END;